(function(i,a,r){"use strict";const u=i.find(s=>s?.type?.displayName=="MessageContent"),{Dispatcher:h}=i.findByProps("Dispatcher"),l=i.findByProps("_lastID"),o=i.findByProps("_channelMessages"),p=i.findByProps("getChannel","getDMUserIds"),c=i.findByProps("updateMessageRecord","createMessageRecord"),g=i.find(s=>s?.default?.prototype?.isEdited),_=i.findByDisplayName("MessageTimestamp"),y=i.findByProps("parseEmbedTitle"),f=i.findByProps("messageContent","botTag"),E=i.findByProps("markup","timestamp"),d=[];function M(s){if(s.type=="MESSAGE_DELETE"){if(s.__messageLogger)return s;const t=o.get(s.channelId);if(!t)return s;const e=t.get(s.id);return!e||e.author?.id=="1"||e.state=="SEND_FAILED"?s:(setTimeout(()=>{l.dirtyDispatch({message:{...e.toJS(),id:e.id,channel_id:e.channel_id,guild_id:p.getChannel(e.channel_id).guild_id,deleted:!0},type:"MESSAGE_UPDATE"})}),null)}else if(s.type=="MESSAGE_UPDATE"){if(s?.message?.deleted)return s;if(s?.message?.edited_timestamp){const e=o.get(s.message.channel_id)?.get(s.message.id);e&&(s.message.edits=e.edits||[],s.message.edits.push({content:e.content,timestamp:e.editedTimestamp||e.timestamp,original:e.editedTimestamp==null}))}}return s}const S=`.ml-deleted {
  color: #f04747;
}

.ml-deleted-suffix {
  font-size: 0.75rem;
  line-height: 1.375rem;
  cursor: pointer;
}

.ml-edit {
  opacity: 0.5;
}`;var D=()=>({onLoad(){a.injectCSS(S),d.push(a.instead("dispatch",h.prototype,function([t],e){t=M(t),t&&e.apply(this,[t])})),d.push(a.instead("updateMessageRecord",c,function([t,e],n){return e.deleted?c.createMessageRecord(e,t.reactions):n.apply(this,[t,e])})),d.push(a.after("createMessageRecord",c,function([t],e){e.edits=t.edits,e.deleted=t.deleted})),d.push(a.after("compare",u,function([t,e],n){return n&&t.message.edits===e.message.edits&&t.message.deleted===e.message.deleted}));const s=g.default.prototype;d.push(a.after("default",g,function([t],e){return e.deleted=!!t.deleted,e.edits=t.edits,e.prototype=s,e.__proto__=s,e})),d.push(a.after("type",u,function([{message:t}],e){const n=(t.edits??[]).map(m=>r.React.createElement("div",{className:[E.markup,f.messageContent,"ml-edit"].join(" ")},y.parse(m.content)," ",r.React.createElement(_,{timestamp:m.timestamp,isEdited:!0,isInline:!1},r.React.createElement("span",{className:f.edited},`(${m.original?"original":"past edit"})`))));return t.deleted&&(e.props.className+=" ml-deleted",e.props.children.push(r.React.createElement("span",{className:"ml-deleted-suffix"}," (deleted)"))),n.length>0?[...n,e]:e}))},onUnload(){for(const s in o._channelMessages){const t=o._channelMessages[s]._array;for(const e of t)if(e.deleted&&l.dirtyDispatch({type:"MESSAGE_DELETE",channelId:e.channel_id,id:e.id,__messageLogger:!0}),e.edits){const n=e.toJS();delete n.edits,l.dirtyDispatch({message:{...n,id:e.id,channel_id:e.channel_id,guild_id:p.getChannel(e.channel_id).guild_id},type:"MESSAGE_UPDATE"})}}for(const s of d)s()}});return D})(cumcord.modules.webpack,cumcord.patcher,cumcord.modules.common);
