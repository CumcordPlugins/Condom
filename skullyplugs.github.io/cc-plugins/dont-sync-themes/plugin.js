(function(a,i,p,l,y,r){"use strict";function S(e){if(e&&e.__esModule)return e;var c=Object.create(null);return e&&Object.keys(e).forEach(function(o){if(o!=="default"){var n=Object.getOwnPropertyDescriptor(e,o);Object.defineProperty(c,o,n.get?n:{enumerable:!0,get:function(){return e[o]}})}}),c.default=e,Object.freeze(c)}var h=S(y);const m=i.findByDisplayName("SwitchItem");var E=()=>(l.useNest(r.persist),h.createElement(h.Fragment,null,h.createElement(m,{note:"Blocks theme changes that come from other clients.",value:r.persist.ghost.blockExtDispatch,onChange:()=>r.persist.store.blockExtDispatch=!r.persist.store.blockExtDispatch},"Block External Changes"),h.createElement(m,{note:"Changes theme when the client starts to your last selected, in case it doesn't match with discord.",value:r.persist.ghost.dispatchOnStart,onChange:()=>r.persist.store.dispatchOnStart=!r.persist.store.dispatchOnStart},"Change Theme On Start")));let u,g,f;var T=e=>({onLoad(){const c=i.findByProps("patch"),o=i.findByDisplayName("FormItem",!1),{ThemeDoNotUseYet:n}=i.findByProps("ThemeDoNotUseYet");typeof e.persist.ghost?.blockExtDispatch!="boolean"&&(e.persist.ghost.blockExtDispatch=!0),typeof e.persist.ghost?.curTheme!="string"&&(e.persist.ghost.curTheme=n.getSetting()),typeof e.persist.ghost?.dispatchOnStart!="boolean"&&(e.persist.ghost.dispatchOnStart=!0),typeof e.persist.ghost?.wasUnloaded!="boolean"&&(e.persist.ghost.wasUnloaded=!1),!e.persist.ghost.wasUnloaded&&e.persist.ghost.dispatchOnStart&&n.getSetting()!==e.persist.ghost.curTheme?(l.logger.log("Stored theme doesn't match discord's theme, dispatching change."),p.FluxDispatcher.dispatch({type:"USER_SETTINGS_UPDATE",settings:{theme:e.persist.ghost.curTheme},cum:!0,clearOverrides:!0,isLocal:!0})):e.persist.ghost.wasUnloaded=!1,u=a.instead("patch",c,(t,s)=>{t[0].body?.theme&&t[0].url==="/users/@me/settings"||s(t)}),g=a.instead("dispatch",p.FluxDispatcher,(t,s)=>{e.persist.ghost.blockExtDispatch&&t[0].type==="USER_SETTINGS_UPDATE"&&!t[0]?.isLocal&&t[0]?.settings?.theme&&!t[0]?.cum||(t[0].cum&&delete t[0].cum,s(t[0]))}),f=a.after("default",o,(t,s)=>{if(s.props.children?.[0]?.props?.children!=="Theme")return;s.props.children[0].props.children+=" - Don't Sync Themes Active";const b=s.props.children[1].props.children[1].props.onChange;s.props.children[1].props.children[1].props.options[2].name+=" (not tested, be careful)",s.props.children[1].props.children[1].props.value=e.persist.ghost.curTheme,s.props.children[1].props.children[1].props.onChange=d=>{d!=="system"&&(e.persist.store.curTheme=d.value),b(d)}})},onUnload(){e.persist.ghost.wasUnloaded=!0,u?.(),g?.(),f?.()},settings:p.React.createElement(E)});return T})(cumcord.patcher,cumcord.modules.webpack,cumcord.modules.common,cumcord.utils,cumcord.modules.common.React,cumcord.pluginData);
